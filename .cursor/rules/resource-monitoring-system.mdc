---
description: Technical specification for GPU resource monitoring, telemetry collection, and alert management system.
globs: **/telemetry.py,**/tray.py,**/metrics.py,**/monitor.py,**/alerts.py
alwaysApply: false
---


# resource-monitoring-system

## Telemetry Collection System (telemetry.py)

GPU Metrics Model:
- Comprehensive metric tracking for:
  - Resource utilization
  - Memory usage/pressure 
  - Temperature thresholds
  - Power consumption
  - Clock speeds
  - PCIe bandwidth

Alert Level System:
- NORMAL: Default operating state
- WARNING: Memory ≥75% or Temperature ≥70°C 
- CRITICAL: Memory ≥90% or Temperature ≥80°C or Power ≥98%
- EMERGENCY: Memory ≥95% or Temperature ≥90°C

Performance History:
- 60-second rolling window of metrics per GPU
- Aggregate metrics across all GPUs
- Memory pressure calculation 
- Power utilization relative to max TDP
- Average utilization tracking

Recovery Logic:
- Exponential backoff for NVML failures
- Mock data generation on consecutive failures
- Recovery attempts capped by ENV_MAX_RECOVERY_ATTEMPTS
- Per-GPU error state tracking

## Memory Monitoring (monitor.py)

Memory Usage Tracking:
- Real-time memory allocation monitoring
- Per-GPU memory pressure calculation
- Memory leak detection via sliding window analysis
- Growth rate tracking using linear regression
- 30-second deduplication window for leak alerts

Session Management:
- Pre/post inference memory baselines
- Memory retention tracking above 10MB threshold
- Token count and memory statistics per session
- Memory pattern categorization:
  - ALLOCATION: Positive deltas
  - DEALLOCATION: Negative deltas 
  - GROWTH_SPIKE: Rapid increases
  - LEAK_DETECTED: Sustained growth

Relevant File Paths:
- dualgpuopt/telemetry.py
- dualgpuopt/monitor.py

$END$