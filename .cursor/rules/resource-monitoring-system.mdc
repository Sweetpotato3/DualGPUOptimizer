---
description: Specialized GPU resource monitoring and telemetry collection system for dual-GPU optimization scenarios
globs: **/telemetry.py,**/tray.py,**/metrics.py,**/dashboard.py
alwaysApply: false
---


# resource-monitoring-system

Real-time GPU Telemetry Collection System

1. GPU Performance Metrics Collection (telemetry.py)
Core metrics gathered:
- GPU utilization percentage
- Memory utilization (used/total/free)
- Temperature monitoring with thresholds (70°C orange, 80°C red)
- Power consumption tracking
- Graphics/Memory clock speeds
- PCIe bandwidth utilization 
- Fan speed percentages

2. Metrics Processing Pipeline (metrics.py)
- Continuous polling system with configurable intervals:
  - Critical metrics: 500ms
  - Standard metrics: 1000ms
  - Background metrics: 2000ms
- Event-driven update architecture
- 60-point rolling history for trend analysis
- Automatic unit scaling for bandwidth metrics (KB/s to GB/s)

3. Resource Alert System (tray.py)
- Idle GPU detection with configurable thresholds
- Default 30% utilization threshold
- 5-minute monitoring window
- Progressive alert stages based on duration
- Auto-shutdown capability for idle resources

4. Multi-GPU Dashboard (dashboard.py)
- Synchronized visualization of dual GPU metrics
- Color-coded status indicators:
  - Green: Normal operation
  - Orange: Warning thresholds
  - Red: Critical thresholds
  - Blue: Idle state
- Dynamic grid system for temporal reference
- Hardware-specific maximums:
  - Graphics clock: 2500 MHz
  - Memory clock: 12000 MHz
  - Temperature: 100°C
  - Power: GPU-specific TDP

Business Rules:
- Memory warnings trigger at <256MB available
- Temperature warnings staged at 70°C and 80°C
- Power monitoring normalized to card-specific TDP
- Idle detection requires sustained low utilization
- Alert system requires manual acknowledgment
- Metrics history maintains exactly 60 data points

$END$