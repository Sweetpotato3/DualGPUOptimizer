---
description: Specification for GPU telemetry system implementation including metrics collection, utilization tracking, and alert mechanisms.
globs: **/telemetry.py,**/tray.py,**/monitor.py,**/metrics.py,**/alerts.py
alwaysApply: false
---


# resource-monitoring-system

The resource monitoring system implements specialized GPU telemetry with real-time metrics collection and alerting:

## Telemetry Collection (dualgpuopt/telemetry.py)
- Real-time GPU monitoring with configurable polling intervals
- Critical metrics tracking:
  * Memory allocation/usage
  * Utilization percentages 
  * Temperature monitoring
  * Power consumption
  * Fan speeds
  * Clock frequencies
- Implements exponential backoff for NVML recovery attempts
- Middleware pipeline for metrics processing and event distribution

## Alert System (dualgpuopt/memory/alerts.py)
- Four-tier severity classification:
  * NORMAL: Standard operation
  * WARNING: Resources nearing thresholds
  * CRITICAL: Immediate action required
  * EMERGENCY: System stability at risk
- Temperature-based alert triggers:
  * Warning: ≥80°C
  * Critical: ≥90°C
- Memory utilization alerts:
  * Warning: 80% usage
  * Critical: 90% usage
  * Emergency: 95% usage

## Memory Tracking (dualgpuopt/memory/metrics.py)
- Session-based memory profiling
- Categorized memory event tracking:
  * Allocation/deallocation events
  * Growth spikes detection
  * Memory leak identification
  * Inference boundary marking
- Rolling history buffer (60 samples)
- Per-GPU memory statistics
- Process-level memory attribution

## Performance Monitoring (dualgpuopt/memory/monitor.py)
- OOM prevention logic with recovery triggers
- Dynamic batch size optimization based on memory patterns
- Memory usage projections using historical profiles
- Automated response to memory pressure:
  1. Cache clearing
  2. Batch size reduction
  3. Memory offloading
  4. Process termination

Importance Score: 85
The resource monitoring system provides critical telemetry and alerting for GPU optimization, though it represents supporting infrastructure rather than core optimization algorithms.

$END$