---
description: Resource monitoring and telemetry system specification for managing GPU metrics, utilization tracking, and alerting.
globs: **/telemetry.py,**/monitor.py,**/metrics.py,**/alerts.py,**/gpu_info.py
alwaysApply: false
---


# resource-monitoring-system

## Core Monitoring Components

### GPU Telemetry Collection
- Real-time collection of GPU metrics including:
  - Memory utilization and VRAM usage
  - Core/Memory clock speeds
  - Temperature and power consumption
  - PCIe bandwidth utilization
- Built-in fallback to mock data generation if hardware access fails
- Exponential backoff retry mechanism for NVML reinitialization

### Memory Alert System
- Implements tiered alert levels:
  - NORMAL: <70% memory usage
  - WARNING: 70-85% memory usage  
  - CRITICAL: 85-95% memory usage
  - EMERGENCY: >95% memory usage
- Alert notifications include:
  - Current usage and threshold
  - Recommended actions
  - GPU context
  - Timestamp

### Performance Monitoring
- Rolling history of GPU metrics with 60-sample window
- Multi-line graphing with per-GPU color coding
- Dynamic scaling based on canvas dimensions 
- Auto-adjusting time intervals
- Grid overlay with 10% utilization intervals

### Memory Recovery
- Memory reclamation strategies:
  - CACHE_ONLY: Clears PyTorch CUDA cache
  - CLOCK_RESET: Resets GPU clocks via NVML
  - FULL_RESET: Combines all methods
  - SYSTEM_CMD: OS-specific commands
- Measures reclaimed memory and provides status

File Paths:
```
dualgpuopt/telemetry.py
dualgpuopt/memory/alerts.py
dualgpuopt/memory/monitor.py
dualgpuopt/memory/recovery.py
```

$END$