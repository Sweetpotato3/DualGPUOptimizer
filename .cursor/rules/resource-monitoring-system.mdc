---
description: Used to detect and understand GPU memory usage monitoring, telemetry systems, and resource tracking capabilities.
globs: **/telemetry.py,**/tray.py,**/monitor.py,**/memory/**,**/gpu/**
alwaysApply: false
---


# resource-monitoring-system

## Core Telemetry Collection Logic

The telemetry system implements real-time GPU metric collection with the following key components:

1. GPU Memory State Collection
- Tracks real-time memory allocations and deallocations per GPU
- Implements sliding window analysis for memory growth detection 
- Maintains session-specific memory baselines
- Calculates memory deltas between inference operations
- Key file: `dualgpuopt/memory/profiler.py`

2. Custom Alert System
- Memory leak detection using configurable thresholds:
  * Spike detection for rapid memory growth
  * Sustained growth monitoring for leak identification
  * Minimum 5MB change requirement for alerts
  * 30-second cooldown between leak notifications
- File: `dualgpuopt/telemetry.py`

3. Metric Collection Pipeline
- Polling-based collection of GPU metrics:
  * Memory utilization
  * GPU usage percentage  
  * Temperature monitoring
  * Power consumption
  * Clock speeds
- Configurable sampling rates with default 1000ms interval
- File: `dualgpuopt/gpu/monitor.py`

4. Session Analytics
- Per-inference memory tracking:
  * Token count correlation
  * Memory efficiency metrics
  * Peak usage analysis
- Session statistics with min/max/avg values
- Resource optimization recommendations
- File: `dualgpuopt/memory/metrics.py`

5. Recovery Mechanisms
- Progressive memory cleanup strategies:
  * CUDA cache clearance
  * GPU clock/compute reset
  * Full system memory reclamation
- Platform-specific memory recovery commands
- Success rate tracking for recovery attempts
- File: `dualgpuopt/memory/recovery.py`

The system provides comprehensive GPU resource monitoring with sophisticated pattern detection, alert generation, and memory optimization capabilities focused on ML model inference workloads.

$END$