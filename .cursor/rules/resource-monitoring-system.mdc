---
description: Implements GPU resource monitoring, telemetry collection, and alert systems for multi-GPU environments
globs: **/telemetry.py,**/tray.py,**/gpu/monitor.py,**/gpu/info.py
alwaysApply: false
---


# resource-monitoring-system

## Core Telemetry System (telemetry.py)

GPU Metrics Collection:
- Monitors domain-specific GPU metrics including memory pressure, temperature thresholds, power usage
- Tracks PCIe bandwidth utilization for multi-GPU communication

Alert Classification:
```python
AlertLevel thresholds:
- EMERGENCY: Memory ≥ 95% or Temperature ≥ 90°C 
- CRITICAL: Memory ≥ 90% or Temperature ≥ 80°C or Power ≥ 98%
- WARNING: Memory ≥ 75% or Temperature ≥ 70°C or Power ≥ 90%
```

Recovery System:
- Progressive error recovery with exponential backoff for hardware failures
- Auto-switches to mock data after multiple failures
- Maintains error state history for intelligent fallback decisions

Mock GPU Profiles:
- RTX 5070 Ti: 24GB memory, 350W power limit, 2100MHz base clock
- RTX 4060: 12GB memory, 200W power limit, 1800MHz base clock
- Models correlations between utilization, temperature, power and PCIe bandwidth

## Metrics Management System

Rolling Window Analytics:
- Maintains 60-second history of GPU metrics
- Implements selective metric retention based on importance
- Correlates metrics across time periods for trend analysis

Domain-Specific Tracking:
- Memory pressure based on model size and token count
- Temperature trends with fan speed correlation
- Power draw patterns during inference operations

Monitoring Thread Management: 
- Dedicated telemetry thread with configurable sampling rates
- Automatic thread cleanup on application exit
- Resource-aware suspension during idle periods

File Paths:
- dualgpuopt/telemetry.py
- dualgpuopt/gpu/monitor.py
- dualgpuopt/gpu/info.py

Importance Score: 95 - Core monitoring functionality essential for GPU optimization

$END$