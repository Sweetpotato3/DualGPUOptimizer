---
description: Specification for GPU resource monitoring, telemetry collection, and alert systems for dual GPU optimization
globs: **/telemetry.py,**/tray.py,**/gpu_info.py
alwaysApply: false
---


# resource-monitoring-system

### GPU Telemetry Collection System
The telemetry system provides continuous monitoring and metrics collection for GPU resources through multiple components:

1. Core Telemetry Engine (telemetry.py):
- Collects real-time GPU metrics including utilization, memory usage, PCIe throughput, temperature, power usage, clock speeds
- Maintains a telemetry queue limited to 60 samples for historical tracking
- Streams metrics at configurable intervals through background threading

Importance Score: 95

2. Resource State Detection (gpu_info.py):
- Implements parallel GPU probing for performance optimization
- Collects comprehensive GPU information including architecture details, CUDA cores, PCIe specifications
- Provides mock GPU data generation for testing environments

Importance Score: 85

3. Alert System (tray.py):
- Monitors GPU idle states with 5-minute threshold detection
- Triggers user notifications for prolonged GPU idle states
- Recommends resource optimization actions through system tray alerts

Importance Score: 75

### Key Integration Points:

1. Metrics Pipeline:
```
GPU Hardware -> Telemetry Engine -> Metrics Queue -> Dashboard/Alerts
```

2. Resource Optimization Flow:
```
Idle Detection -> Alert Generation -> User Notification -> Resource Management
```

File Paths:
- `dual_gpu_optimizer/dualgpuopt/telemetry.py`
- `dual_gpu_optimizer/dualgpuopt/gpu_info.py`
- `dual_gpu_optimizer/dualgpuopt/tray.py`

$END$