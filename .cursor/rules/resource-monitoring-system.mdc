---
description: Rule for analyzing GPU resource monitoring and telemetry collection systems in dual GPU optimization applications
globs: **/telemetry.py,**/metrics.py,**/tray.py,**/*monitor*.py
alwaysApply: false
---


# resource-monitoring-system

The resource monitoring system implements specialized GPU telemetry collection and performance tracking through several key components:

## Telemetry Collection Engine
- Located in `dual_gpu_optimizer/dualgpuopt/telemetry.py`
- Implements real-time GPU metrics collection:
  - GPU utilization percentage
  - Memory usage tracking (used/total VRAM)
  - Temperature monitoring with thresholds
  - Power consumption tracking
  - PCIe bandwidth monitoring (RX/TX)
  - Fan speed monitoring
- Uses NVML bindings for direct GPU metric access
- Falls back to mock data generation for testing environments

## System Tray Integration 
- Located in `dual_gpu_optimizer/dualgpuopt/tray.py`
- Provides real-time GPU status in system tray with:
  - GPU utilization indicators 
  - Temperature alerts
  - Memory pressure warnings
  - Quick access to optimization controls

## Resource Alerting System
- Implements tiered alert levels for GPU resources:
  - NORMAL: Standard operating conditions
  - WARNING: Approaching resource limits
  - CRITICAL: Resource constraints detected
  - EMERGENCY: Immediate intervention required
- Configurable thresholds for:
  - Memory utilization percentage
  - Temperature limits
  - Power consumption
  - PCIe bandwidth saturation

## Memory Monitoring 
- Located in `dualgpuopt/memory_monitor.py`
- Model-specific memory tracking with profiles:
```python
llama2-70b:
  base_usage: 35GB
  per_batch_usage: 350MB
  per_token_usage: 18KB

mixtral-8x7b:
  base_usage: 25GB
  per_batch_usage: 200MB
  per_token_usage: 12KB
```
- OOM prevention with recovery actions:
  1. Cache clearing
  2. Batch size reduction
  3. Memory offloading
  4. Process termination

## Idle Detection System
- Monitors GPU utilization patterns
- Configurable idle parameters:
  - Utilization threshold percentage
  - Required idle duration
- Event-based alert mechanism
- Automated power management responses

$END$