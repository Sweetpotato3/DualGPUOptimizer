---
description: Telemetry and resource monitoring system for tracking GPU metrics, utilization, and performance alerts
globs: 
alwaysApply: false
---


# resource-monitoring-system

Core Telemetry System:

1. GPU Metrics Collection
- Collects comprehensive GPU performance metrics:
  * Utilization percentage
  * Memory usage and allocation
  * Temperature readings
  * Power consumption
  * PCIe bandwidth utilization
  * Clock speeds (core/memory)
  * Fan speeds
- Maintains 60-second rolling history buffer
- Implements exponential backoff for failed collections

2. Alert Classification System
Custom alert level logic with thresholds:
- EMERGENCY: Memory ≥95% or Temperature ≥90°C
- CRITICAL: Memory ≥90% or Temperature ≥80°C or Power ≥98%
- WARNING: Memory ≥75% or Temperature ≥70°C or Power ≥90%
- NORMAL: All metrics below thresholds

3. Memory Profiling
- Specialized memory event classification:
  * Allocation/deallocation tracking
  * Growth spike detection
  * Potential leak identification
  * Inference session monitoring
- Token-aware memory analysis for ML workloads
- Session-based metrics aggregation

4. Recovery System
Progressive recovery strategy for monitoring failures:
- Exponential backoff between retries
- NVML reinitialization attempts
- Fallback to mock data generation
- Service continuity preservation

5. Mock Data Generation
Simulates realistic GPU behavior:
- High-end GPU profile (24GB, 350W)
- Mid-range GPU profile (12GB, 200W)
- Correlated metrics generation:
  * Utilization affects temperature
  * Load impacts power draw
  * Memory usage patterns
  * Fan speed response

Key Files:
- dualgpuopt/telemetry.py
- dualgpuopt/memory/profiler.py
- dualgpuopt/telemetry_history.py

$END$