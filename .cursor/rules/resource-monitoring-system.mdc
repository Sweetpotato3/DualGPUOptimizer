---
description: Provides a comprehensive resource monitoring system for monitoring GPU metrics, performance, utilization, and health in dual-GPU environments.
globs: 
alwaysApply: false
---


# resource-monitoring-system

The resource monitoring system provides real-time telemetry and monitoring of GPU resources with these key components:

## GPU Telemetry Collection
Location: dualgpuopt/telemetry.py

Primary metrics tracked:
- Utilization percentage per GPU
- Memory usage and pressure monitoring 
- Temperature readings with thresholds
- Power consumption tracking
- Clock speed monitoring (SM/Memory)
- PCIe bandwidth utilization
- Fan speed status

Alert classification logic:
- EMERGENCY: Memory ≥95% or Temperature ≥90°C
- CRITICAL: Memory ≥90% or Temperature ≥80°C or Power ≥98%
- WARNING: Memory ≥75% or Temperature ≥70°C or Power ≥90%  
- NORMAL: Below thresholds

## Historical Metrics 
Location: dualgpuopt/telemetry_history.py

- Maintains 60-second rolling window of metrics
- Tracks per-GPU and aggregate system metrics
- Records differential metrics:
  - GPU utilization changes
  - VRAM usage patterns
  - Temperature trends
  - Power draw variations

## Memory Profiling
Location: dualgpuopt/memory/profiler.py

- Session-based memory tracking for dual GPUs
- Memory anomaly detection:
  - Leak detection using linear regression
  - Growth pattern analysis
  - Memory spike detection (>0.1 MB/s)
  - Retention validation (>5MB threshold)
- Inference analysis:
  - Pre/post memory baselines
  - Per-inference deltas
  - Token count correlation
  - Memory timeline analysis with 20-point sliding window

## Dashboard Visualization
Location: dualgpuopt/gui/dashboard.py

- Real-time metrics visualization
- Color-coded status indicators based on thresholds
- Historical trend graphs
- Resource utilization gauges
- Active alert indicators
- System health status display

## Telemetry Service
Location: dualgpuopt/services/telemetry.py

- Event-driven metric updates
- Thread-safe data collection
- Configurable sampling intervals
- Background monitoring worker
- Health check integration
- Mock data support for testing

$END$