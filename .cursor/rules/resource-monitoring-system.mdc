---
description: Documents technical implementation of GPU resource monitoring and telemetry collection system with alerting capabilities
globs: **/telemetry.py,**/tray.py,**/gpu_info.py,**/metrics.py,**/monitor.py
alwaysApply: false
---


# resource-monitoring-system

The resource monitoring system implements real-time GPU metrics collection and alerting with the following key components:

## GPU Telemetry Collection (Importance: 85)
- Maintains 60-second rolling history buffer for each GPU metric
- Collects critical hardware metrics:
  - Memory utilization and total available memory
  - GPU core utilization percentage
  - Temperature readings
  - Power consumption values
  - Fan speeds
  - PCIe bandwidth usage
  - Clock speeds (core and memory)

## Resource Alerting System (Importance: 90)
Alert thresholds defined for key metrics:
- Emergency level:
  - Memory usage ≥95%
  - Temperature ≥90°C 
- Critical level:
  - Memory usage ≥90%
  - Temperature ≥80°C
  - Power usage ≥98%
- Warning level:
  - Memory usage ≥75%
  - Temperature ≥70°C 
  - Power usage ≥90%

## Auto-Recovery Logic (Importance: 80)
- Progressive error handling with exponential backoff
- Auto-switches to mock data generation after repeated failures
- Maintains separate error states per GPU for partial functionality
- Recovery attempts triggered by threshold violations

## Mock Data Generation (Importance: 75)
Simulates realistic GPU behavior patterns with:
- High-end GPU characteristics:
  - 24GB VRAM capacity
  - 350W power limit
  - 2100MHz base clock
- Mid-range GPU characteristics:
  - 12GB VRAM capacity  
  - 200W power limit
  - 1800MHz base clock

File Paths:
- dualgpuopt/telemetry.py
- dualgpuopt/gpu/monitor.py
- dualgpuopt/memory/monitor.py

$END$