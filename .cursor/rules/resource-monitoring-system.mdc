---
description: Specification for GPU resource monitoring, telemetry collection, and performance alerting system implementation
globs: **/telemetry.py,**/tray.py,**/metrics.py,**/gpu_info.py
alwaysApply: false
---


# resource-monitoring-system

## Core Telemetry System (telemetry.py) [Score: 95]

Real-time GPU metrics collection engine with specialized data points:
- GPU utilization percentage tracking
- Memory usage and availability monitoring 
- Temperature sensor readings
- Power draw measurements
- PCIe bandwidth utilization (RX/TX)
- Fan speed monitoring

Implements middleware pipeline for metric processing with:
- Custom threshold detection for resource constraints
- Rolling 60-sample history buffer for trend analysis
- Normalized scaling of different metric types
- Automatic unit conversion (KB/s to GB/s for bandwidth)

## Alert System (tray.py) [Score: 85]

GPU resource management notification system:
- Idle detection logic with configurable thresholds
- 5-minute default idle window monitoring
- Multi-GPU correlation for workload distribution alerts
- Progressive notification stages based on utilization patterns

## Metrics Collection (metrics.py, gpu_info.py) [Score: 90]

Specialized GPU metric aggregation:
- Architecture-specific CUDA core calculations
- Memory bandwidth monitoring with hardware-specific thresholds
- Thermal envelope tracking relative to TDP
- Custom sampling rates for different metric categories
- Mock GPU system support for testing environments

The monitoring system maintains dedicated event channels for:
- Critical resource warnings (OOM, thermal limits)
- Performance degradation alerts
- Idle resource notifications
- Cross-GPU load balancing events

$END$