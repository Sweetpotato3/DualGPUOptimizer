---
description: Resource monitoring and real-time telemetry collection system for GPU metrics, performance tracking, and hardware state analysis.
globs: **/telemetry.py,**/telemetry_history.py,**/tray.py
alwaysApply: false
---


# resource-monitoring-system

## GPU Telemetry Collection System
Key business logic focuses on real-time GPU metric collection and analysis:

1. GPU Metrics Processing:
- 60-second rolling metrics history for utilization, memory, temperature, power
- Multi-tier alert levels based on hardware thresholds:
  * Memory: 75%, 90%, 95%  
  * Temperature: 70°C, 80°C, 90°C
  * Power: 90%, 98%
- Exponential backoff error recovery for NVML failures

2. Mock Data Generation:
- Realistic mock data generation for testing:
  * RTX 5070 Ti: 24GB VRAM, 350W power limit
  * RTX 4060: 12GB VRAM, 200W power limit
- Correlated metric generation (temperature follows utilization)
- Randomized fluctuations within realistic bounds

3. Telemetry History Management:
- Thread-safe rolling buffer implementation
- Automatic pruning of samples older than 60 seconds
- Per-GPU tracking of:
  * Average utilization 
  * Total VRAM usage percentage
  * Average temperature
  * Normalized power consumption

4. Alert System:
- Hardware-aware alert thresholds
- Progressive severity levels (NORMAL -> WARNING -> CRITICAL -> EMERGENCY)
- Configurable alert persistence
- Automatic alert resolution on metric recovery

File Paths:
- `dualgpuopt/telemetry.py`: Core telemetry collection system
- `dualgpuopt/telemetry_history.py`: Rolling history management
- `dualgpuopt/tray.py`: Alert system and notification management

$END$