---
description: Specification for GPU telemetry and resource monitoring system in DualGPUOptimizer, including metrics collection, alert management and memory profiling.
globs: **/telemetry.py,**/telemetry_history.py,**/metrics.py,**/memory_profiler.py,**/memory/*.py
alwaysApply: false
---


# resource-monitoring-system

## Core Telemetry System

### Metrics Collection Logic
- Implements real-time GPU metrics gathering:
  - Utilization percentages
  - Memory usage tracking 
  - Temperature monitoring
  - Power consumption
  - PCIe bandwidth usage
  - Clock speeds
  - Fan speeds
- Maintains 60-second rolling history using custom HistoryBuffer
- Implements exponential backoff for failed NVML operations

### Alert Classification System
Defines business rules for GPU health states:
- EMERGENCY: Memory ≥95% or temperature ≥90°C
- CRITICAL: Memory ≥90% or temperature ≥80°C or power ≥98%
- WARNING: Memory ≥75% or temperature ≥70°C or power ≥90%
- NORMAL: All metrics below warning thresholds

### Memory Profiling System
- Tracks specialized memory events:
  - Allocation/deallocation patterns
  - Memory spikes detection
  - Leak identification
  - Sustained growth analysis
- Inference session monitoring:
  - Pre/post inference baselines
  - Memory deltas tracking
  - Token-based analysis
  - Leak detection during inference

### Pattern Analysis
- Linear regression on memory windows
- Dual threshold approach:
  - Spike threshold: Rapid growth
  - Leak threshold: Sustained growth
- Alert suppression within 30-second windows
- 5MB minimum change for leak alerts

### Recovery System 
- Graduated error handling with failback to mock data
- Maximum recovery attempts via environment variable
- Maintains service continuity during hardware issues
- Automatic failover on consecutive failures

File Paths:
- dualgpuopt/telemetry.py
- dualgpuopt/memory/profiler.py
- dualgpuopt/telemetry_history.py

$END$