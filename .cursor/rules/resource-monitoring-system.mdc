---
description: Resource monitoring, GPU metrics collection, utilization tracking, and alert mechanism implementation details
globs: **/telemetry.py,**/tray.py,**/monitor.py,**/metrics.py
alwaysApply: false
---


# resource-monitoring-system

## Core Monitoring Components

1. GPU Telemetry Manager
- Implements real-time monitoring of dual GPU systems tracking:
  - GPU utilization, memory, temperature, power draw
  - PCIe bandwidth (TX/RX metrics)
  - Clock speeds (SM and memory clocks)
  - Fan speed control
  - Power limit management

2. Alert Classification System
- Custom alerting with thresholds:
  - EMERGENCY: Memory ≥95% or temp ≥90°C
  - CRITICAL: Memory ≥90% or temp ≥80°C or power ≥98%
  - WARNING: Memory ≥75% or temp ≥70°C or power ≥90%
  - NORMAL: Below threshold metrics

3. Metrics History Management
- Maintains 60-second rolling history for key metrics:
  - Per-GPU performance metrics
  - Aggregate system metrics
  - Moving averages (utilization, memory, temperature)
  - Historical trending analysis

4. GPU Recovery Protocol
- Progressive recovery mechanism:
  - Exponential backoff between attempts 
  - Maximum 3 recovery attempts
  - Fallback to mock data after failures
  - Telemetry preservation during recovery

## Relevant File Paths
- `dualgpuopt/telemetry.py`
- `dualgpuopt/memory/monitor.py`
- `dualgpuopt/telemetry_history.py`

## Importance Scores
- GPU Telemetry Manager: 95
- Alert Classification System: 90  
- Metrics History Management: 85
- GPU Recovery Protocol: 80

$END$