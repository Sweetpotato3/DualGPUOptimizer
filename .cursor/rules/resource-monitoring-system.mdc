---
description: Specification for GPU resource monitoring, telemetry collection, and alert systems in dual GPU optimization scenarios
globs: dualgpuopt/telemetry.py,dualgpuopt/tray.py,dualgpuopt/gpu/monitor.py,dualgpuopt/memory/monitor.py
alwaysApply: false
---


# resource-monitoring-system

### GPU Telemetry Collection
**File Path**: `dualgpuopt/telemetry.py`

The telemetry system implements real-time GPU resource monitoring with the following key components:

1. Metrics Collection:
- Tracks GPU utilization, VRAM usage, temperatures, power draw 
- Monitors PCIe bandwidth utilization and clock speeds
- Records fan speeds and power states
- Implements exponential backoff retry on collection failures

2. Alert System:
- Temperature thresholds: Warning (70°C), Critical (80°C)
- VRAM usage alerts: Warning (75%), Critical (90%)
- Power limit monitoring with percentage-based alerts
- Automatic notification debouncing (30-second cooldown)

3. Middleware Pipeline:
- EventBusMiddleware: Publishes metrics to event bus
- LoggingMiddleware: Records telemetry data for analysis
- Custom middleware support for metric processing

### Monitoring Components 
**File Path**: `dualgpuopt/gpu/monitor.py`

1. GPU Monitor Service:
- Real-time hardware polling with configurable intervals
- Automatic detection of GPU capabilities
- Mock data generation for testing environments
- Dynamic monitoring adjustment based on GPU load

2. Resource Tracking:
- Per-GPU memory tracking and trend analysis
- Temperature monitoring with thermal throttling detection
- Power limit enforcement and tracking
- Clock speed monitoring and correlation

### Memory Monitoring System
**File Path**: `dualgpuopt/memory/monitor.py`

1. Memory Pattern Analysis:
- Sliding window analysis for memory growth trends
- Linear regression for leak detection
- Pattern classification: Growth, Spike, Stable
- Historical memory usage tracking

2. Alert Generation:
- Progressive alert levels: INFO -> WARNING -> CRITICAL
- Automatic alert correlation across GPUs
- Context-aware alert messages with remediation suggestions
- Alert filtering based on severity and frequency

Importance Scores:
- GPU Telemetry Collection: 95 (Core monitoring functionality)
- Alert System: 85 (Critical operational feedback)
- Memory Pattern Analysis: 80 (Key optimization insight)
- Resource Tracking: 75 (Important operational metrics)

$END$