---
description: Specification for implementing GPU resource monitoring, telemetry collection, and alert systems for dual-GPU optimization
globs: **/telemetry.py,**/tray.py,**/metrics.py,**/gpu_info.py,**/dashboard.py
alwaysApply: false
---


# resource-monitoring-system

The resource monitoring system implements specialized GPU telemetry collection and analysis with real-time metric tracking.

Core Components:

1. Telemetry Collection Engine
- GPU-specific metrics gathered:
  * Memory utilization (total/used/free)
  * Core/Memory clock speeds
  * Temperature readings
  * Power consumption levels
  * Fan speeds
  * PCIe bandwidth utilization
- Implementation in dualgpuopt/telemetry.py leverages NVML for direct hardware access
- Rolling 60-sample history window maintained per metric

2. Alert Mechanism (Importance: 85)
- Multi-tiered warning system with configurable thresholds:
  * Temperature: Warning at 80°C, Critical at 90°C
  * Memory: Warning at 90% utilization
  * Power: Alert when exceeding TDP
- Custom alert routing through event bus system
- Idle detection with 30-second threshold

3. Metric Processing Pipeline
- Raw metric normalization for consistent reporting
- Conversion of memory values to standardized units (MiB)
- PCIe bandwidth calculations in MB/s
- Temperature scaling with celsius/fahrenheit conversion

4. GPU Resource Dashboard
- Real-time visualization of key metrics
- Color-coded status indicators:
  * Green: Normal operation
  * Yellow: Approaching thresholds
  * Red: Exceeding safe limits
- Dynamic refresh rates (500ms-2000ms) based on system load

Key Files:
- dualgpuopt/telemetry.py
- dualgpuopt/gui/dashboard.py 
- dualgpuopt/metrics.py
- dualgpuopt/gpu_info.py

The system provides comprehensive GPU resource monitoring tailored for dual-GPU optimization scenarios, with emphasis on early warning detection and performance anomaly identification.

$END$