---
description: Resource monitoring and telemetry system for dual GPU setups, focusing on memory, utilization, temperature and performance metrics tracking.
globs: */telemetry.py,*/telemetry_history.py,*/gpu/monitor.py,*/memory/monitor.py,*/services/telemetry.py
alwaysApply: false
---


# resource-monitoring-system

The resource monitoring system implements specialized GPU telemetry collection and analysis through several key components:

## Core Telemetry Collection
- Implements polling-based metrics collection with configurable intervals
- Tracks per-GPU metrics:
  * Utilization percentage
  * Memory usage/pressure
  * Temperature values
  * Power consumption
  * Clock speeds
  * PCIe bandwidth

## Alert Classification System
Implements a four-tier alert system based on GPU health metrics:
```python
- EMERGENCY: Memory usage ≥ 95% or Temperature ≥ 90°C
- CRITICAL: Memory usage ≥ 90% or Temperature ≥ 80°C or Power usage ≥ 98%
- WARNING: Memory usage ≥ 75% or Temperature ≥ 70°C or Power usage ≥ 90%
- NORMAL: All metrics below thresholds
```

## Telemetry History Management
- Maintains 60-second rolling window of metrics history
- Specialized multi-GPU aggregation:
  * System-wide utilization averages
  * Total memory consumption tracking
  * Temperature pattern analysis across devices

## Error Recovery Logic
- Progressive backoff for NVML recovery attempts
- Automatic fallback to mock data generation
- Configurable recovery attempts with exponential backoff

## Mock Data Generation Rules
Simulates realistic GPU behavior:
- High-end GPU (RTX 5090):
  * 24GB memory
  * 350W power limit 
- Mid-range GPU (RTX 4080):
  * 16GB memory
  * 200W power limit

Key File Paths:
```
dualgpuopt/telemetry.py
dualgpuopt/telemetry_history.py
dualgpuopt/gpu/monitor.py 
dualgpuopt/memory/monitor.py
dualgpuopt/services/telemetry.py
```

$END$