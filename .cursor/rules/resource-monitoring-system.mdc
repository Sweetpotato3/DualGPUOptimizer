---
description: Technical specification for GPU resource monitoring systems including telemetry collection, utilization tracking, and alert mechanisms
globs: **/telemetry.py,**/tray.py,**/gpu_info.py,**/event_dashboard.py
alwaysApply: false
---


# resource-monitoring-system

The resource monitoring system implements specialized GPU telemetry collection and analysis capabilities:

Core Monitoring Components (Importance: 85):

1. Real-time Telemetry Collection (telemetry.py)
- GPU metrics collection pipeline tracking:
  - Load balancing statistics 
  - PCIe bandwidth utilization
  - Power consumption patterns
  - Memory usage tracking
- Configurable alert thresholds for GPU utilization levels
- Event bus integration for real-time monitoring
- Performance metric aggregation

2. Idle Detection System (tray.py)
- Continuous GPU load monitoring across devices
- Notification triggers for underutilized GPUs:
  - Load threshold: <30% utilization
  - Time window: 5+ minute duration
- System tray integration for status visibility

3. Metrics Dashboard (event_dashboard.py)
- 60-point rolling window for historical utilization
- Dynamic GPU detection and monitoring adaptation
- Normalized metric visualization:
  - GPU utilization percentage
  - Memory usage with MB/GB scaling
  - Temperature monitoring (0-100Â°C range)
  - Power draw (0-400W scale)

4. Hardware Profiling (gpu_info.py)
- Comprehensive GPU metrics modeling using dataclasses
- Specialized calculations for:
  - Memory usage percentages
  - Power usage relative to limits
  - Architecture detection
  - CUDA core estimation

Key Domain Features:
- Real-time GPU resource tracking
- Multi-GPU monitoring coordination
- Intelligent idle detection
- Performance threshold alerts
- Historical utilization analysis

File Paths:
- dualgpuopt/telemetry.py
- dualgpuopt/tray.py
- dualgpuopt/gui/event_dashboard.py
- dualgpuopt/gpu_info.py

$END$