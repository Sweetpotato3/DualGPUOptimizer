---
description: Resource monitoring system for tracking GPU telemetry, metrics collection, and alert mechanisms
globs: **/telemetry.py,**/tray.py,**/metrics.py,**/gui/dashboard.py,**/gui/event_dashboard.py
alwaysApply: false
---


# resource-monitoring-system

### GPU Telemetry Collection
- Collects detailed GPU metrics including:
  - Utilization percentage
  - Memory usage and availability
  - Temperature readings
  - Power consumption 
  - Fan speeds
  - Clock speeds
- Implements middleware pipeline pattern for processing telemetry data
- Publishes metrics to event bus for real-time dashboard updates

### Idle Detection System
- Monitors GPU utilization patterns
- Triggers notifications when GPUs are idle for 5+ minutes
- Configurable idle thresholds and alert settings
- System tray integration for status visibility

### Metrics Dashboard
- Real-time visualization of GPU metrics
- Historical utilization graphs with configurable time windows
- Per-GPU metrics display including:
  - Temperature monitoring with warning thresholds
  - Power usage tracking
  - Memory allocation visualization
  - PCIe bandwidth usage

### Event-Driven Architecture
- High-priority subscription to GPUMetricsEvent
- Maintains history of GPU utilization data
- Dynamic UI updates based on detected GPUs
- Real-time metrics refresh for active monitoring

### Prometheus Integration
- Optional metrics export to Prometheus
- Custom GPU metric collectors
- Fallback to internal tracking when Prometheus unavailable
- Configuration options for metric export intervals

### Alert System
- Configurable alert thresholds for:
  - Temperature limits
  - Memory usage caps
  - Extended idle periods
  - Power consumption warnings
- Alert delivery through system tray notifications

$END$