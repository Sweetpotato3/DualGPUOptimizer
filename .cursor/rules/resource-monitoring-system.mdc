---
description: Specification for implementing real-time GPU resource monitoring and telemetry systems with alerts
globs: **/telemetry.py,**/monitor.py,**/metrics.py,**/alerts.py
alwaysApply: false
---


# resource-monitoring-system

Core Telemetry System Components:

1. GPU Metrics Collection (telemetry.py)
- Real-time monitoring of critical GPU metrics:
  * Memory utilization with percentage thresholds (75%, 90%)
  * Temperature monitoring with warning levels (70°C, 80°C) 
  * Power consumption relative to GPU power limits
  * Clock speeds for SM and Memory
  * PCIe bandwidth (TX/RX rates)

2. Alert System (telemetry.py)
- Four-tier alert classification:
  * NORMAL: Standard operating conditions
  * WARNING: Approaching thresholds (75% memory, 70°C)
  * CRITICAL: Threshold exceeded (90% memory, 80°C)
  * EMERGENCY: Dangerous conditions (95% memory, 90°C)
- Intelligent throttling of alerts:
  * 3-second cooldown between notifications
  * Alert priority queueing system
  * Context-aware recommendations based on alert severity

3. History Management
- Rolling 60-second history buffer for metrics tracking
- Timeline markers for significant events:
  * Out of memory conditions
  * Temperature spikes
  * Power limit throttling
- Custom event classification system for tracking GPU state changes

4. Mock Data Generation
- Simulated metrics for testing and development:
  * Correlated power usage with GPU utilization (20-90%)
  * Temperature scaling based on utilization
  * Memory usage patterns following workload profiles
  * Fan speed correlation with temperature readings

Relevant Files:
- dualgpuopt/telemetry.py: Core telemetry implementation
- dualgpuopt/gpu/monitor.py: GPU state monitoring
- dualgpuopt/memory/metrics.py: Memory-specific metrics
- dualgpuopt/memory/alerts.py: Alert system implementation

Business Impact Scores:
- Telemetry System: 95 (Critical for GPU monitoring)
- Alert System: 85 (Key for system stability)
- History Management: 75 (Important for trend analysis)
- Mock System: 45 (Supporting development functionality)

$END$