---
description: Resource monitoring system for tracking GPU metrics, telemetry collection, and alerting system for GPU utilization optimization
globs: **/telemetry.py,**/monitor.py,**/metrics.py,**/alerts.py
alwaysApply: false
---


# resource-monitoring-system

## Telemetry Collection System
The telemetry system implements real-time GPU resource monitoring with the following capabilities:

1. GPU Metrics Collection:
- Tracks utilization, memory usage, temperature, power consumption 
- Implements PCIe bandwidth monitoring (RX/TX) with automatic unit scaling
- Collects clock speeds (graphics/memory) with validation against maximum limits
- Monitors fan speeds with auto/manual mode detection

2. Alert Generation:
- Temperature thresholds: Warning at 80°C, Critical at 90°C
- Power limit monitoring with GPU-specific maximums
- Memory usage alerts with configurable thresholds
- Idle GPU detection with customizable timeouts

3. Metrics Publishing:
- Event-based metric updates to avoid polling overhead
- Rolling window of performance history (60 samples)
- Auto-scaling bandwidth display (KB/s → MB/s → GB/s)
- Color-coded visualization based on severity thresholds

## Memory Monitoring

1. Out-of-Memory Prevention:
- Progressive memory monitoring with configurable thresholds
- Automatic recovery attempts with exponential backoff
- Configurable maximum recovery attempts before fallback
- Memory pressure detection with preventive actions

2. Memory Usage Tracking:
- Per-GPU memory allocation tracking
- Available vs Used memory monitoring
- Memory fragmentation detection
- Cache usage monitoring

Relevant File Paths:
```
dualgpuopt/telemetry.py - Core telemetry collection
dualgpuopt/memory/monitor.py - Memory monitoring
dualgpuopt/memory/alerts.py - Alert generation
dualgpuopt/memory/metrics.py - Metrics processing
```

$END$