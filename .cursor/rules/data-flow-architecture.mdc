---
description: Analyzes data flow between components including GPU metrics, optimization settings, and monitoring data across the system.
globs: **/dualgpuopt/**,**/*service*.py,**/*telemetry*.py,**/*monitor*.py,**/*metrics*.py
alwaysApply: false
---


# data-flow-architecture

Core Data Flow Components:

1. GPU Telemetry Pipeline
- Source: `dualgpuopt/telemetry.py`
- Collects real-time GPU metrics through NVML interface
- Maintains 60-second rolling window of metrics history 
- Passes data through middleware chain for processing:
  * Log recording
  * Metric normalization 
  * Event bus publication
- Emits GPUMetricsEvents with utilization, memory, temperature data

2. Memory Profiling Data Flow
- Source: `dualgpuopt/memory/profiler.py`
- Tracks memory allocations/deallocations during inference
- Correlates memory events with token processing
- Streams event data to specialized visualizers
- Maintains timed event buffers for:
  * Growth spikes 
  * Leak detection
  * Session boundaries

3. Event Bus Distribution
- Source: `dualgpuopt/services/event_bus.py` 
- Routes telemetry, commands and configuration changes
- Priority-based event dispatch (LOW, NORMAL, HIGH, CRITICAL)
- Services and UI components subscribe to relevant event types
- Handles both sync and async event delivery

4. Optimizer Data Flow
- Source: `dualgpuopt/optimizer.py`
- Calculates optimal memory splits between GPUs
- Generates framework-specific configuration commands
- Outputs tensor parallel arrangements for models
- Exchanges data with UI for visualization

5. GUI Component Communication 
- Dashboard subscribes to GPU metric events
- Optimizer tab receives model configuration updates
- Settings tab broadcasts configuration changes
- Launcher exchanges process state with monitor

Key Data Structures:
- TelemetrySample: GPU metrics with timestamp
- GPUMetricsEvent: Normalized GPU telemetry
- ModelSelectedEvent: Model configuration parameters  
- SplitCalculatedEvent: GPU workload distribution

Data Flow Patterns:
- Real-time metrics from GPUs -> Middleware -> Event Bus -> UI Components
- UI Config Changes -> Event Bus -> Services -> Persistent Storage
- Optimizer Calculations -> Launch Commands -> Process Monitor
- Memory Events -> Profiler -> Timeline Analysis -> Alerts

$END$