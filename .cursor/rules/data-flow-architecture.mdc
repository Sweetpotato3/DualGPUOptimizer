---
description: Documents data flow patterns between components in a dual-GPU optimization system for ML model inference
globs: *.py,dualgpuopt/**/*.py,integrated_app/**/*.py
alwaysApply: false
---


# data-flow-architecture

The system implements a multi-layered data flow architecture for optimizing dual GPU machine learning workloads:

Core Data Flow Components:

1. GPU Metrics Pipeline (dualgpuopt/telemetry.py)
- Manages real-time GPU performance data collection and distribution
- Routes critical metrics through event bus:
  * Memory utilization
  * Temperature data 
  * Power consumption
  * Clock speeds
- Pushes metrics to visualization subsystems with 100ms throttling

2. Model Layer Distribution (dualgpuopt/layer_balance.py)
- Calculates optimal layer placement across GPUs using profiling data
- Distributes transformer layers based on:
  * GPU memory availability
  * Layer execution latency
  * Inter-GPU bandwidth constraints
- Provides layer distribution feedback to launcher subsystem

3. Memory Management Pipeline (dualgpuopt/memory/profiler.py)
- Tracks memory allocation patterns with sliding window analysis
- Detects memory growth anomalies:
  * Rapid spikes (>spike_threshold MB/s)
  * Sustained leaks (>leak_threshold MB/s)
- Routes memory alerts through event bus with 30s cooldown

4. Optimization Parameter Flow (dualgpuopt/gui/main_app.py)
- Manages bidirectional flow of optimization parameters
- Distributes configuration changes through event system:
  * Model split ratios
  * Context length adjustments
  * Batch size optimizations
- Provides real-time feedback on parameter impacts

5. Resource Monitoring Flow (dualgpuopt/gpu/monitor.py)
- Captures GPU resource metrics at configurable intervals
- Routes utilization data through monitoring pipeline
- Triggers alerts on resource constraint violations
- Provides feedback for dynamic resource allocation

Key Data Channels:
- GPU Metrics Bus: High-frequency telemetry data
- Config Channel: Optimization parameter updates
- Alert Channel: Resource warnings and violations
- Profiling Channel: Performance metrics and analysis

The architecture emphasizes real-time data flow for GPU resource optimization while maintaining system stability through throttled update frequencies and cooldown periods.

$END$