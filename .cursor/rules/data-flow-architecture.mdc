---
description: Documents core data flows between GPU optimization components, monitoring systems and state management
globs: **/services/*,**/gpu_info.py,**/metrics.py,**/telemetry.py,**/event*.py
alwaysApply: false
---


# data-flow-architecture

The data flow architecture centers around several key pathways:

### Core Telemetry Flow
- GPU metrics flow from `gpu_info.py` through telemetry collection middleware 
- `telemetry.py` processes and enriches raw metrics
- Metrics are published to event bus subscribers via `GPUMetricsEvent`
- Dashboard and monitoring components consume metrics events

### Configuration State Flow
- `config_service.py` manages application settings
- Changes trigger `config_changed` and `config_updated` events
- State changes flow through `state_service.py` which publishes `state_changed` events
- Components subscribe to relevant state/config events for updates

### Event Bus Architecture
- Enhanced event bus (`event_bus.py`) handles typed events with priority dispatch
- Events flow from producers through priority-based handler chains
- Supports both sync and async event handlers
- Security-critical events can be locked to specific subscribers

### Error Flow
- Centralized error handling in `error_service.py`
- GPU errors trigger special handling paths with mock mode options
- Error events published to subscribers based on severity level
- Error logging and UI notifications controlled by error service

### Metrics Export Flow
- Optional Prometheus metrics export pathway 
- GPU telemetry data exported via configured endpoints
- Fallback to no-op functions when Prometheus unavailable
- Performance metrics collected and exported

### Layer Distribution Flow
- Layer execution profiling data collected
- Redistribution decisions flow through optimization logic
- Device mapping instructions published to execution components
- Layer balance feedback flows back for refinement

The architecture emphasizes event-driven communication between components with strong separation of data collection, processing and consumption pathways.

$END$