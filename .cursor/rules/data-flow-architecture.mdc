---
description: Documents data flow between components in dual-GPU optimization system, including resource metrics, parameters, and monitoring data.
globs: dualgpuopt/telemetry.py,dualgpuopt/memory/*,dualgpuopt/services/*,dualgpuopt/gui/*,dualgpuopt/engine/*
alwaysApply: false
---


# data-flow-architecture

## Core Data Flow Components

### 1. GPU Telemetry Pipeline
- Realtime metrics collection from dual GPUs via telemetry service
- Metrics published to event bus for system-wide consumption
- Core metrics include:
  - GPU utilization, memory usage, temperature
  - PCIe bandwidth (TX/RX)
  - Clock speeds and power consumption
- Rolling 60-second history maintained for trend analysis

### 2. Memory Management Flow
- Memory profiler tracks allocations/deallocations across GPUs
- Maintains session-based memory timelines for historical analysis
- Leak detection using linear regression analysis of memory patterns
- Inference session tracking with start/end memory baselines
- Anomaly detection through sliding window analysis

### 3. Event Bus Communication
- Central event bus handles GPU metrics distribution
- Priority-based event handling for critical GPU states
- Event categories:
  - GPU metrics updates
  - Alert level changes (NORMAL, WARNING, CRITICAL, EMERGENCY)
  - Configuration changes 
  - Error states

### 4. Model Layer Distribution
- Layer balancing algorithm calculates optimal distribution across GPUs
- Layer assignment based on:
  - Memory availability per GPU
  - Layer latency profiling
  - Workload characteristics
- Updates distributed through model configuration events

### 5. Optimization Parameter Flow
- Command generation system processes optimization parameters:
  - GPU split ratios
  - Tensor parallelism configuration
  - Memory thresholds
  - Context lengths
- Parameters flow through launcher to execution environment

### 6. Alert Propagation
- Alert system monitors thresholds:
  - Memory usage ≥95% or temperature ≥90°C: EMERGENCY
  - Memory usage ≥90% or temperature ≥80°C: CRITICAL
  - Memory usage ≥75% or temperature ≥70°C: WARNING
- Alerts propagate through event bus to UI components
- Enables automatic recovery procedures

### 7. Cache Management Flow
- Smart batch scheduler integrates with GPU cache
- Memory pressure triggers cache clearing
- Cache statistics flow to monitoring system

### File Paths
- dualgpuopt/telemetry.py
- dualgpuopt/memory/profiler.py
- dualgpuopt/services/event_bus.py
- dualgpuopt/engine/pool/core.py
- dualgpuopt/gpu/monitor.py
- dualgpuopt/batch/smart_batch.py

$END$