---
description: Analysis of data flow between components in GPU resource management and optimization systems
globs: **/dualgpuopt/**/*.py,**/dual_gpu_optimizer/**/*.py
alwaysApply: false
---


# data-flow-architecture

Core Data Flow Components:

1. Event Bus System (services/event_bus.py)
Importance: 95
- GPU metrics event streams flow from hardware monitoring to visualization components
- OptimizationEvents carry tensor split ratios and distribution parameters
- Priority-based event routing ensures critical GPU metrics are processed first

2. GPU Resource Monitoring Pipeline (telemetry.py -> event_dashboard.py)
Importance: 90
- Raw GPU telemetry data flows through middleware processing pipeline
- Processed metrics feed into 60-sample rolling window visualization
- Multi-GPU state updates propagate to dashboard components

3. Configuration Data Flow (config_service.py)
Importance: 85
- GPU overclock profiles flow from settings to hardware controllers
- Model context sizes and tensor parameters flow to optimization engine
- Idle threshold settings propagate to monitoring system

4. Optimization Parameter Flow (optimizer.py)
Importance: 90
- Memory split calculations flow to framework-specific command generators
- Tensor parallelism fractions propagate to model deployment services
- GPU capability data flows to environment variable generation

Key Data Paths:

1. GPU Metrics Flow:
```
Hardware -> Telemetry System -> Event Bus -> Dashboard Display
```

2. Optimization Settings Flow:
```
Configuration -> State Service -> Optimizer -> Command Generation
```

3. Error Handling Flow:
```
Error Service -> State Updates -> Mock Mode Activation -> UI Updates
```

Critical Data Models:

1. GPU Metrics Event
- Utilization percentages
- Memory usage 
- Temperature readings
- Power consumption
- Fan speeds

2. Optimization Parameters
- Tensor split ratios
- Context sizes
- Memory allocations
- Framework-specific settings

3. Configuration State
- Overclock profiles
- Idle thresholds
- Framework preferences

The architecture emphasizes real-time flow of GPU metrics and optimization parameters, with specialized handling for dual-GPU configurations and tensor operations distribution.

$END$