---
description: Specification for analyzing and documenting data flow patterns across system components in GPU optimization applications.
globs: **/dualgpuopt/**/*.py,**/gui/**/*.py,**/services/**/*.py,**/memory/**/*.py
alwaysApply: false
---


# data-flow-architecture

Key Data Flow Components:

1. GPU Telemetry Pipeline
- Collects GPU metrics through NVML interface
- Routes telemetry data through configurable middleware pipeline
- Event-driven metrics distribution to UI components
- Historical data retention in 60-second rolling buffer
- Thread-safe telemetry collection

2. Memory Analysis Flow 
- Real-time memory leak detection using sliding window analysis
- Linear regression for memory growth rate calculation
- Session-based memory statistics aggregation
- Token-correlated memory pattern tracking
- Per-GPU memory delta measurements

3. Event Distribution System
- Hierarchical event routing for GPU metrics
- Priority-based event propagation (LOW to CRITICAL)
- GPU metrics event caching with TTL
- Dashboard event consumers for visualization
- Alert event generation based on thresholds

4. Alert Pipeline
- Multi-level alert system (WARNING/CRITICAL/EMERGENCY)
- GPU-specific alert thresholds for memory/temperature
- Alert aggregation and throttling logic 
- Status badge integration for visualization
- Progressive alert escalation based on duration

5. Optimization Data Flow
- Model parameter validation and distribution
- Layer balancing calculation pipeline
- Memory split optimization for dual GPUs
- Framework-specific command generation
- Configuration preset management

6. Memory Profiling Flow
- Memory event collection and categorization
- Inference session boundary detection
- Pattern analysis for memory anomalies
- Real-time leak detection pipeline
- Memory recommendation generation

File Paths:
- dualgpuopt/telemetry.py (Telemetry pipeline)
- dualgpuopt/memory/profiler.py (Memory analysis)
- dualgpuopt/services/event_bus.py (Event system)
- dualgpuopt/services/alerts.py (Alert pipeline)
- dualgpuopt/optimizer.py (Optimization flow)
- dualgpuopt/memory/predictor.py (Memory profiling)

$END$