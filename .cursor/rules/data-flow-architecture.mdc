---
description: Specification for documenting data flow between system components for GPU optimization and telemetry monitoring
globs: **/dualgpuopt/**/*.py,**/dual_gpu_optimizer/**/*.py
alwaysApply: false
---


# data-flow-architecture

## Core Data Flows

### 1. GPU Telemetry Collection Pipeline
- GPU metrics flow from NVML through middleware pipeline
- Telemetry samples collected at configurable intervals (default 0.8s)
- Alert middleware processes samples for threshold violations:
  * Memory usage > 90%
  * Temperature > 80Â°C
  * Power usage > 95%
- Event bus distributes processed metrics to visualization components

File: dualgpuopt/telemetry.py

### 2. Model Execution Data Flow
- Engine pool manages model instance lifecycle and data routing
- Command generation produces framework-specific configurations
- Process monitoring streams output through message queues
- Model process output flows through logging middleware

Files: 
- dualgpuopt/engine/pool/core.py
- dualgpuopt/commands/gpu_commands.py

### 3. Memory Management Pipeline
- GPU memory metrics flow through profiling system
- Memory pattern analysis detects:
  * Growth spikes above spike_threshold
  * Sustained leaks above leak_threshold
  * Per-inference memory deltas
- Alert events published through event bus for visualization
- Recovery commands flow through command system to GPU

Files:
- dualgpuopt/memory/profiler.py
- dualgpuopt/memory/recovery.py

### 4. Configuration Data Flow
- Settings flow from UI through config service
- Preset configurations distributed to relevant components
- GPU-specific settings routed through command system
- State changes published through event bus

Files:
- dualgpuopt/services/config_service.py
- dualgpuopt/services/state_service.py

### 5. Metrics Visualization Pipeline
- GPU metrics flow from telemetry through event bus
- UI components subscribe to metric updates
- Chart components maintain 60-point historical buffers
- Alert badges subscribe to threshold violations

Files:
- dualgpuopt/gui/dashboard.py
- dualgpuopt/qtgui/widgets.py

$END$