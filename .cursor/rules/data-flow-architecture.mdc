---
description: Defines data flow patterns and integrations for dual-GPU optimization system components
globs: **/dualgpuopt/**/*.py,**/integrated_app/**/*.py
alwaysApply: false
---


# data-flow-architecture

Core Data Flow Components:

1. GPU Telemetry Pipeline
- GPU metrics flow from NVML through telemetry service to dashboard
- Real-time metrics include utilization, memory, temperature, power
- Event bus middleware transforms raw telemetry into standardized events
- Metrics aggregated into 60-sample rolling history buffers 
- Path: `dualgpuopt/telemetry.py` -> `dualgpuopt/gui/dashboard.py`

2. Model Configuration Flow
- Model parameters flow from preset definitions to optimization engine
- Parameters include context size, layer count, attention heads
- Optimization engine generates framework-specific commands
- Memory constraints validated against available GPU resources
- Path: `dualgpuopt/ctx_size.py` -> `dualgpuopt/optimizer.py`

3. Layer Distribution Pipeline
- Layer performance metrics collected through profiling system
- Metrics feed into layer balancing algorithm for distribution
- Distribution ratios flow to command generation system
- Path: `dualgpuopt/layer_balance.py` -> `dualgpuopt/commands/gpu_commands.py`

4. Memory Management Flow  
- GPU memory availability flows from info service
- Memory requirements calculated by context size calculator
- Results flow to memory split optimizer
- Final allocations distributed to framework launch system
- Path: `dualgpuopt/gpu_info.py` -> `dualgpuopt/optimizer.py`

5. Resource Monitoring Pipeline
- GPU metrics flow from telemetry service to event bus
- Event bus distributes to multiple consumers:
  - Dashboard visualization
  - Optimization engine
  - Resource alerting system
- Path: `dualgpuopt/telemetry.py` -> `dualgpuopt/services/event_bus.py`

Integration Points:
- Framework adapters for llama.cpp and vLLM
- NVML integration for GPU metrics
- PyTorch tensor operations for memory calculations
- Event system for asynchronous metric distribution

Domain-Specific Data:
- GPU performance metrics
- Model architecture parameters  
- Layer performance profiles
- Memory allocation mappings
- Resource utilization history

$END$