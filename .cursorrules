
START SPECIFICATION:
---
description: Overview documentation for GPU optimization and management system focused on machine learning workloads, particularly for multi-GPU environments running large language models
globs: *.py,*.code-workspace
alwaysApply: false
---


# main-overview

## Development Guidelines

- Only modify code directly relevant to the specific request. Avoid changing unrelated functionality.
- Never replace code with placeholders like `# ... rest of the processing ...`. Always include complete code.
- Break problems into smaller steps. Think through each step separately before implementing.
- Always provide a complete PLAN with REASONING based on evidence from code and logs before making changes.
- Explain your OBSERVATIONS clearly, then provide REASONING to identify the exact issue. Add console logs when needed to gather more information.


The system consists of three core business domains:

## GPU Management and Optimization (Importance: 95)
- Discovers and monitors NVIDIA GPUs through NVML integration
- Calculates optimal workload splits across multiple GPUs based on memory capacity
- Generates environment configurations and command-line parameters for LLM frameworks
- Determines tensor fraction allocations for distributed model loading
- Key file: `dual_gpu_optimizer/dualgpuopt/optimizer.py`

## Real-time GPU Telemetry (Importance: 85)
- Collects real-time GPU metrics including load, memory usage, and PCIe throughput
- Maintains historical performance data for trend analysis
- Implements idle detection and notification system
- Provides visualization of GPU utilization patterns
- Key file: `dual_gpu_optimizer/dualgpuopt/telemetry.py`

## Model Configuration Management (Importance: 80)
- Handles model path and repository selection
- Manages context size settings for LLM operations
- Generates optimized launch commands for llama.cpp and vLLM frameworks
- Provides preset configurations for common model deployments
- Key file: `dual_gpu_optimizer/dualgpuopt/gui.py`

## Framework Integration Layer (Importance: 75)
- Generates specific commands for LLM frameworks
- Manages subprocess execution for model servers
- Streams real-time logs from running processes
- Handles framework-specific environment setup
- Key file: `dual_gpu_optimizer/dualgpuopt/runner.py`

$END$
END SPECIFICATION